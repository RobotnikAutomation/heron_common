<?xml version="1.0"?>

<!-- RBVogui XL -->
<robot name="rbvogui" xmlns:xacro="http://wiki.ros.org/xacro">


    <!-- ***************** -->
    <!-- Imported elements -->
    <!-- ***************** -->

    <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->

    <!-- Import rbvogui base elements-->
    <xacro:include filename="$(find rbvogui_description)/urdf/bases/rbvogui_xl_base.urdf.xacro" />

    <!-- Import rbvogui wheels -->
    <xacro:include filename="$(find rbvogui_description)/urdf/wheels/motor_wheel_xl.urdf.xacro" />

    <!-- Import rbvogui fix wheels -->
    <xacro:include filename="$(find rbvogui_description)/urdf/wheels/fixed_wheel_xl.urdf.xacro" />
    
    <!-- Structures -->
    <xacro:include filename="$(find rbvogui_description)/urdf/structures/top_cover.urdf.xacro" /> 
    <xacro:include filename="$(find rbvogui_description)/urdf/structures/gps_mast.urdf.xacro" /> 

    <!-- Import ewellix lift -->
    <xacro:include filename="$(find ewellix_description)/urdf/ewellix_lift_500mm.urdf.xacro" />

    <!-- Import UR10e arm -->
    <xacro:include filename="$(find ur_description)/urdf/inc/ur10e_macro.xacro" />

    <!-- Import all available sensors -->
    <xacro:include filename="$(find robotnik_sensors)/urdf/all_sensors.urdf.xacro" />

    <xacro:property name="PI" value="3.1415926535897931"/>
    <xacro:property name="deg2rad" value="0.01745329251"/>

    <!-- Wheel parameters -->
    <xacro:property name="wheel_offset_x" value="0.4795" />    <!-- x,y,z in translation from base_link to the center of the wheel -->
    <xacro:property name="wheel_offset_y" value="0.2925" />
    <xacro:property name="wheel_offset_z" value="0.0" />

    <!-- Flag to select the high or low quality model -->
    <xacro:property name="hq" value="true" />
    <xacro:property name="publish_bf" value="true" />

    <xacro:arg name="prefix" default="robot_" />
    <xacro:arg name="kinematics" default="ackermann" />
    <xacro:arg name="gpu" default="true" />

    <!-- Arm with lift parameters -->
    <xacro:property name="lift_arm_offset_x" value="0.275" />
    <xacro:property name="lift_arm_offset_y" value="0.0" />
    <xacro:property name="lift_arm_offset_z" value="0.011" />

    <xacro:property name="arm_position_x" value="0.0"/>
    <xacro:property name="arm_position_y" value="0"/>
    <xacro:property name="arm_position_z" value="0.59188"/>
    <xacro:property name="arm_orientation_r" value="0"/>
    <xacro:property name="arm_orientation_p" value="0"/>
    <xacro:property name="arm_orientation_y" value="0"/>
    <xacro:arg name="load_kinematics_file" default="false"/>
    <!-- Necesarry for ur_description compatible with official ur drivers-->


    <xacro:macro name="rbvogui" params="prefix publish_bf hq kinematics launch_arm arm_manufacturer arm_model load_kinematics_file
                                        launch_gripper gripper_manufacturer gripper_model launch_lift lift_manufacturer lift_model gpu">
        
        <!-- *************** -->
        <!-- Robots Elements -->
        <!-- *************** -->

        <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->

        <xacro:rbvogui_base prefix="${prefix}" publish_bf="${publish_bf}" hq="${hq}"/>

        <xacro:motor_wheel prefix="${prefix}front_right_" parent="${prefix}base_link" reflect="true" hq="${hq}">
            <origin xyz="${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
        </xacro:motor_wheel>

        <xacro:motor_wheel prefix="${prefix}front_left_" parent="${prefix}base_link" reflect="false" hq="${hq}"> 
            <origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
        </xacro:motor_wheel>

        <xacro:if value="${kinematics == 'omni'}">
            <xacro:motor_wheel prefix="${prefix}back_left_" parent="${prefix}base_link" reflect="false" hq="${hq}">
                <origin xyz="-${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
            </xacro:motor_wheel>

            <xacro:motor_wheel prefix="${prefix}back_right_" parent="${prefix}base_link" reflect="true" hq="${hq}">
                <origin xyz="-${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
            </xacro:motor_wheel>
        </xacro:if>

        <xacro:if value="${kinematics == 'ackermann'}">
            <xacro:fixed_wheel prefix="${prefix}back_left_" parent="${prefix}base_link" reflect="false" hq="${hq}">
                <origin xyz="-${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
            </xacro:fixed_wheel>

            <xacro:fixed_wheel prefix="${prefix}back_right_" parent="${prefix}base_link" reflect="true" hq="${hq}">
                <origin xyz="-${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
            </xacro:fixed_wheel>
        </xacro:if>

        <!-- SENSORS see robotnik_sensors for the specific configuration -->

        <!-- IMU -->
        <xacro:sensor_vectornav prefix="${prefix}imu" parent="${prefix}chassis_link">
            <origin xyz="0.3 -0.3 0.0725" rpy="0 0 0"/>
        </xacro:sensor_vectornav>

        <!-- GPS -->
        <xacro:sensor_gps_mast prefix="${prefix}gps" parent="${prefix}chassis_link">
            <origin xyz="-0.472 0.40028 0.44044" rpy="0 0 0"/>
        </xacro:sensor_gps_mast>

        <!-- Orbbec camera -->
        <xacro:sensor_orbbec_astra prefix="${prefix}front_rgbd_camera" parent="${prefix}chassis_link">
            <origin xyz="0.637 0.0 -0.03" rpy="0 0 0"/>
        </xacro:sensor_orbbec_astra>

        <!-- 2d laser -->
        <xacro:sensor_sick_tim551 prefix="${prefix}front_laser" parent="${prefix}chassis_link" gpu="${gpu}" min_angle="${-PI/2}" max_angle="${PI/2}" prefix_topic="front_laser">
            <origin xyz="0.63 0.0 -0.028" rpy="${PI} 0 0"/> <!-- Verificar X -->
        </xacro:sensor_sick_tim551>

        <!-- 3D Laser -->
        <xacro:sensor_rs_bpearl prefix="${prefix}front_3d_laser" parent="${prefix}chassis_link" prefix_topic="front_3d_laser" suffix_topic="_3d" range_min="0.1" range_max="90" hfov="360" samples="1200" vfov="90.0" lasers="32" fps="15" gpu="${gpu}">
            <origin xyz="0.57918 0 0.24072" rpy="0 ${90*PI/180} 0"/>
        </xacro:sensor_rs_bpearl>

        <!-- Ewellix lift -->
        <xacro:ewellix_lift_500mm prefix="${prefix}" parent ="${prefix}chassis_link" >
            <origin xyz="${lift_arm_offset_x} ${lift_arm_offset_y} ${lift_arm_offset_z}" rpy="0 0 0"/>
        </xacro:ewellix_lift_500mm>

        <joint name="${prefix}arm_base_joint" type="fixed">
            <origin xyz="0 0 0.508" rpy="0 0 ${PI/4}"/>
            <parent link="${prefix}ewellix_lift_2_link" />
            <child link="${prefix}arm_base_link" />
        </joint>

        <!-- UR-10e ARM -->
        <xacro:if value="${load_kinematics_file}">
            <xacro:ur10e_robot prefix="${prefix}arm_">
            </xacro:ur10e_robot>
        </xacro:if>

        <xacro:unless value="${load_kinematics_file}">
            <xacro:ur10e_robot prefix="${prefix}arm_">
            </xacro:ur10e_robot>
        </xacro:unless>

    </xacro:macro>

    <!-- Gazebo ros control pluggins -->
    <xacro:ros_control/>

    <xacro:rbvogui prefix="$(arg prefix)" kinematics="$(arg kinematics)" load_kinematics_file="$(arg load_kinematics_file)" gpu="$(arg gpu)" publish_bf="${publish_bf}" hq="${hq}"
                   launch_arm="$(arg launch_arm)" arm_manufacturer="$(arg arm_manufacturer)" arm_model="$(arg arm_model)"
                   launch_gripper="$(arg launch_gripper)" gripper_manufacturer="$(arg gripper_manufacturer)" gripper_model="$(arg gripper_model)"
                   launch_lift="$(arg launch_lift)" lift_manufacturer="$(arg lift_manufacturer)" lift_model="$(arg lift_model)" />

</robot>